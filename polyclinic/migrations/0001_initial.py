# Generated by Django 4.2 on 2025-02-21 09:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounting', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billCode', models.CharField(max_length=355)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.FloatField(default=0.0)),
                ('isAccounted', models.BooleanField(default=False)),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.financialoperation')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultationDate', models.DateTimeField(auto_now_add=True)),
                ('consultationPrice', models.FloatField(default=5000)),
                ('consultationReason', models.CharField(blank=True, max_length=100, null=True)),
                ('consultationNotes', models.TextField(blank=True, max_length=100000, null=True)),
                ('paymentStatus', models.CharField(choices=[('Invalid', 'Invalid'), ('Valid', 'Valid')], default='Invalid', max_length=100)),
                ('state', models.CharField(choices=[('InProgress', 'InProgress'), ('Completed', 'Completed'), ('Pending', 'Pending')], default='Pending', max_length=100)),
                ('statePatient', models.CharField(choices=[('Critical', 'Critical'), ('Not Critical', 'Not Critical'), ('Serious', 'Serious'), ('Stable', 'Stable'), ('Inprouving', 'Inprouving')], default='Not Critical', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ConsultationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeDoctor', models.CharField(choices=[('Specialist', 'Specialist'), ('Ophtalmologist', 'Ophtalmologist'), ('Dentist', 'Dentist')], default='Specialist', max_length=100)),
                ('price', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('reference', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examName', models.CharField(max_length=100)),
                ('examCost', models.FloatField()),
                ('examDescription', models.TextField(blank=True, max_length=23, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('examName', models.CharField(blank=True, max_length=50, null=True)),
                ('examStatus', models.CharField(default='Invalid', max_length=20)),
                ('patientStatus', models.CharField(choices=[('Invalid', 'Invalid'), ('Valid', 'Valid')], default='Invalid', max_length=20)),
                ('notes', models.TextField(blank=True, max_length=10000, null=True)),
                ('idConsultation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polyclinic.consultation')),
                ('idExam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.exam')),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('lastModificationDate', models.DateTimeField(auto_now=True)),
                ('folderCode', models.CharField(max_length=300)),
                ('isClosed', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='MedicalFolderPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pageNumber', models.IntegerField()),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('nurseNote', models.TextField(blank=True, max_length=10000, null=True)),
                ('doctorNote', models.TextField(blank=True, max_length=10000, null=True)),
                ('diagnostic', models.TextField(blank=True, max_length=10000, null=True)),
                ('idMedicalFolder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polyclinic.medicalfolder')),
                ('idMedicalStaff', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField(default=1)),
                ('name', models.CharField(default='', max_length=50)),
                ('status', models.CharField(default='invalid', max_length=20)),
                ('price', models.FloatField(default=5000)),
                ('expiryDate', models.DateTimeField()),
                ('description', models.TextField(default='important', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('cniNumber', models.CharField(blank=True, default=' ', max_length=255)),
                ('firstName', models.CharField(blank=True, max_length=255)),
                ('lastName', models.CharField(blank=True, default=' ', max_length=255)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=255)),
                ('phoneNumber', models.CharField(blank=True, default=' ', max_length=255)),
                ('birthDate', models.DateField(blank=True, default='0000-00-00', null=True)),
                ('address', models.CharField(blank=True, default=' ', max_length=255)),
                ('email', models.CharField(blank=True, default=' ', max_length=255)),
                ('condition', models.CharField(choices=[('NoCritical', 'NoCritical'), ('Critical', 'Critical')], default='NoCritical', max_length=255, null=True)),
                ('service', models.CharField(choices=[('Generalist', 'Generalist'), ('Specialist', 'Specialist'), ('All', 'All')], default='Generalist', max_length=50, null=True)),
                ('status', models.CharField(default='invalid', max_length=20)),
                ('idMedicalFolder', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.medicalfolder')),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('idConsultation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polyclinic.consultation')),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomLabel', models.CharField(max_length=100)),
                ('beds', models.PositiveIntegerField(default=1)),
                ('busyBeds', models.IntegerField(default=0)),
                ('price', models.FloatField(default=2000)),
                ('type', models.CharField(choices=[('Simple', 'Simple'), ('Emergency', 'Emergency'), ('Staff', 'Staff')], default='Simple', max_length=255)),
                ('facilities', models.CharField(choices=[('Television', 'Television'), ('Air Conditioning', 'Air Conditioning'), ('Private bathroom', 'Private bathroom'), ('Mini fridge', 'Mini fridge')], default='Private Bathroom', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionDrug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('dosage', models.CharField(default=' ', max_length=255)),
                ('instructions', models.CharField(default=' ', max_length=255)),
                ('frequency', models.CharField(default=' ', max_length=255)),
                ('duration', models.CharField(default=' ', max_length=255)),
                ('medicament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.medicament')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='PatientAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('givenAt', models.DateTimeField(auto_now_add=True)),
                ('lostAt', models.DateTimeField(blank=True)),
                ('access', models.BooleanField(default=True)),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('bloodPressure', models.CharField(blank=True, max_length=255, null=True)),
                ('heartRate', models.FloatField(blank=True, null=True)),
                ('chronicalDiseases', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('surgeries', models.TextField(blank=True, null=True)),
                ('currentMedication', models.TextField(blank=True, null=True)),
                ('familyMedicalHistory', models.TextField(blank=True, null=True)),
                ('skinAppearance', models.CharField(blank=True, max_length=255, null=True)),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('idMedicalFolderPage', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='polyclinic.medicalfolderpage')),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addAt', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
                ('reason', models.TextField()),
                ('messageType', models.CharField(choices=[('REPORT_PROBLEM', 'REPORT_PROBLEM'), ('HOSPITALISATION_REQUEST', 'HOSPITALISATION_REQUEST'), ('CONSULTATION_REQUEST', 'CONSULTATION_REQUEST'), ('ACCESS_REQUEST', 'ACCESS_REQUEST'), ('INFO', 'INFO')], default='INFO', max_length=30)),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hospitalisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atDate', models.DateTimeField(auto_now_add=True)),
                ('bedLabel', models.CharField(max_length=100)),
                ('note', models.TextField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('paymentStatus', models.CharField(choices=[('Invalid', 'Invalid'), ('Valid', 'Valid')], default='Invalid', max_length=20)),
                ('removeAt', models.DateTimeField(auto_now_add=True)),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient')),
                ('idRoom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.room')),
            ],
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, max_length=10000, null=True)),
                ('examFile', models.FileField(blank=True, null=True, upload_to='exam_results/')),
                ('idExamRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.examrequest')),
                ('idMedicalFolderPage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.medicalfolderpage')),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient')),
            ],
        ),
        migrations.AddField(
            model_name='examrequest',
            name='idPatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='idConsultationType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polyclinic.consultationtype'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='idMedicalFolderPage',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.medicalfolderpage'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='idMedicalStaffGiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_give', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='consultation',
            name='idMedicalStaffSender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_send', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='consultation',
            name='idPatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient'),
        ),
        migrations.CreateModel(
            name='BillItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('unityPrice', models.FloatField(default=0)),
                ('designation', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('total', models.FloatField(default=0)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.bill')),
                ('consultation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.consultation')),
                ('examRequest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.examrequest')),
                ('hospitalisation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.hospitalisation')),
                ('medicament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.medicament')),
                ('prescription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.prescription')),
            ],
        ),
        migrations.AddField(
            model_name='bill',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atDate', models.DateTimeField()),
                ('reason', models.CharField(max_length=300)),
                ('requirements', models.CharField(max_length=500)),
                ('state', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=200)),
                ('status', models.CharField(choices=[('Not Payable', 'Not Payable'), ('Payable', 'Payable')], default='Not Payable', max_length=200)),
                ('idConsultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.consultation')),
                ('idMedicalStaff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.patient')),
            ],
        ),
    ]
