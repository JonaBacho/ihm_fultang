version: '3'

services:

    #db:
    #    image: postgres:13.0-alpine
    #    volumes:
    #        - postgres_data:/var/lib/postgresql/data/
    #    env_file:
    #        - .env
    #    container_name: did_django_schedule_jobs_v2_db_prod
    #    networks:
    #        - main_prod

    fultang:
      image: "${FULTANG_IMAGE}"
      restart: always
      #command: gunicorn did_django_schedule_jobs_v2.wsgi:application --bind 0.0.0.0:8000
      volumes:
        - ./volumes/db.sqlite3:/app/db.sqlite3:rw
      ports:
          - "8009:8009"
      env_file:
          - .env
      #depends_on:
      #    - db
      networks:
          - fultang
      container_name: fultang

    redis:
      image: redis:alpine
      container_name: redis
      command: redis-server --requirepass fultang --port 6379
      restart: unless-stopped
      #ports:
      #  - 6379:6379
      networks:
        - fultang

    celery:
      image: "${FULTANG_IMAGE}"
      restart: always
      user: django-user
      command: ["sh", "-c", "celery -A fultang worker --loglevel=info" ]
      volumes:
        - ./volumes/db.sqlite3:/app/db.sqlite3:rw
      depends_on:
        - redis
        - fultang
      networks:
        - fultang

    celery-beat:
      image: "${FULTANG_IMAGE}"
      restart: always
      user: django-user
      command: ["sh", "-c", "celery -A fultang beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler" ]
      volumes:
        - ./volumes/db.sqlite3:/app/db.sqlite3:rw
      depends_on:
        - redis
        - fultang
      networks:
        - fultang

networks:
    fultang:
        driver: bridge