name: Deploy to hetzner cloud

on:
  push:
    branches:
      - frontend  # Run this workflow on every push to the main branch

env:
  FULTANG_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/react

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update .env URLs with production domain
        run: |
          sed -i 's|http://85.214.142.178:8009/api/v1/accounting|http://fultang.ddns.net:8009/api/v1/accounting|g' .env
          sed -i 's|http://85.214.142.178:8009/api/v1/medical|http://fultang.ddns.net:8009/api/v1/medical|g' .env
          cat .env

      - name: Log in to GitHub Packages
        run: echo ${PERSONAL_ACCESS_TOKEN} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ env.FULTANG_IMAGE }} .

      - name: Push to Github Packages
        run: |
          docker push ${{ env.FULTANG_IMAGE }}

      - name: Add environment variables to .env
        run: |
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo FULTANG_IMAGE=${{ env.FULTANG_IMAGE }} >> .env
            echo NAMESPACE=${{ secrets.NAMESPACE }} >> .env
            echo PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .env

      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p ~/.ssh
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"

      - name: Build and deploy images on Server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            scp  -o StrictHostKeyChecking=no -r ./.env ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_IP_ADDRESS }}:/home/${{ secrets.REMOTE_USER }}/fultang/frontend
            ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_IP_ADDRESS }} << 'ENDSSH'
              cd /home/${{ secrets.REMOTE_USER }}/fultang/frontend
              source .env
              sudo docker login ghcr.io -u $NAMESPACE -p $PERSONAL_ACCESS_TOKEN
              # Stop and remove any existing container
              if [ "$(sudo docker ps -q -f name=fultang-frontend)" ]; then
                sudo docker stop fultang-frontend
                sudo docker rm fultang-frontend
              fi
              # Remove old image
              sudo docker rmi -f $FULTANG_IMAGE || true
              # Pull latest image
              sudo docker pull $FULTANG_IMAGE
              # Run container with port binding
              sudo docker run -d \
                --name fultang-frontend \
                -p 9000:9000 \
                $FULTANG_IMAGE
            ENDSSH