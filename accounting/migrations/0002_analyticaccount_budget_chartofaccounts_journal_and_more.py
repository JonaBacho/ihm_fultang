# Generated by Django 4.2 on 2025-10-24 03:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('polyclinic', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounting', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.analyticaccount')),
            ],
            options={
                'verbose_name': 'Compte analytique',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('budget_type', models.CharField(choices=[('ANNUAL', 'Budget annuel'), ('QUARTERLY', 'Budget trimestriel'), ('MONTHLY', 'Budget mensuel')], max_length=15)),
                ('fiscal_year', models.PositiveIntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_budgets', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_budgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Budget',
                'unique_together': {('fiscal_year', 'budget_type')},
            },
        ),
        migrations.CreateModel(
            name='ChartOfAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('label', models.CharField(max_length=255)),
                ('account_class', models.CharField(choices=[('1', 'Comptes de capitaux'), ('2', 'Comptes immobilisations'), ('3', 'Comptes de stocks'), ('4', 'Comptes de tiers'), ('5', 'Comptes de trésorerie'), ('6', 'Comptes de charges'), ('7', 'Comptes de produits'), ('8', 'Comptes spéciaux')], max_length=1)),
                ('account_type', models.CharField(choices=[('ASSET', 'Actif'), ('LIABILITY', 'Passif'), ('EQUITY', 'Capitaux propres'), ('REVENUE', 'Produit'), ('EXPENSE', 'Charge')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_detailed', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccounts')),
            ],
            options={
                'verbose_name': 'Compte comptable',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('journal_type', models.CharField(choices=[('SALES', 'Journal des ventes'), ('PURCHASES', 'Journal des achats'), ('BANK', 'Journal de banque'), ('CASH', 'Journal de caisse'), ('GENERAL', 'Journal général'), ('MISC', 'Opérations diverses')], max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('default_credit_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_credit_journals', to='accounting.chartofaccounts')),
                ('default_debit_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_debit_journals', to='accounting.chartofaccounts')),
            ],
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_number', models.CharField(max_length=20, unique=True)),
                ('entry_date', models.DateField()),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('state', models.CharField(choices=[('DRAFT', 'Brouillon'), ('POSTED', 'Validée'), ('CANCELLED', 'Annulée')], default='DRAFT', max_length=10)),
                ('total_debit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_credit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.bill')),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.consultation')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_entries', to=settings.AUTH_USER_MODEL)),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.journal')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Écriture comptable',
                'ordering': ['-entry_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tax_type', models.CharField(choices=[('VAT', 'TVA'), ('WITHHOLDING', 'Retenue à la source'), ('EXCISE', 'Accise')], max_length=15)),
                ('rate', models.DecimalField(decimal_places=4, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('collected_account', models.ForeignKey(help_text='Compte TVA collectée', on_delete=django.db.models.deletion.CASCADE, related_name='collected_taxes', to='accounting.chartofaccounts')),
                ('paid_account', models.ForeignKey(help_text='Compte TVA déductible', on_delete=django.db.models.deletion.CASCADE, related_name='paid_taxes', to='accounting.chartofaccounts')),
            ],
            options={
                'verbose_name': 'Taux de taxe',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('supplier_type', models.CharField(choices=[('PHARMA', 'Laboratoire pharmaceutique'), ('EQUIPMENT', 'Équipementier médical'), ('SERVICE', 'Prestataire de service'), ('SUPPLIER', 'Fournisseur général')], max_length=15)),
                ('address', models.TextField(blank=True)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('payment_terms', models.PositiveIntegerField(default=30, help_text='Délai de paiement en jours')),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_id', models.CharField(blank=True, max_length=50, verbose_name='Numéro fiscal')),
                ('trade_register', models.CharField(blank=True, max_length=50, verbose_name='RCCM')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(help_text='Compte comptable fournisseur', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.chartofaccounts')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fournisseur',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntryLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('label', models.CharField(max_length=255)),
                ('debit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('credit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccounts')),
                ('analytic_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.analyticaccount')),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='accounting.journalentry')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.supplier')),
            ],
            options={
                'verbose_name': "Ligne d'écriture",
                'ordering': ['journal_entry', 'sequence'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=50)),
                ('iban', models.CharField(blank=True, max_length=34)),
                ('swift_code', models.CharField(blank=True, max_length=11)),
                ('balance_date', models.DateField()),
                ('balance_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('is_active', models.BooleanField(default=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccounts')),
            ],
            options={
                'verbose_name': 'Compte bancaire',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_number', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('BUILDING', 'Bâtiment'), ('MEDICAL_EQUIPMENT', 'Équipement médical'), ('IT_EQUIPMENT', 'Matériel informatique'), ('FURNITURE', 'Mobilier'), ('VEHICLE', 'Véhicule')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('acquisition_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('acquisition_date', models.DateField()),
                ('useful_life_years', models.PositiveIntegerField()),
                ('salvage_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('depreciation_method', models.CharField(choices=[('LINEAR', 'Linéaire'), ('DECLINING', 'Dégressif'), ('UNITS', 'Unités œuvre')], default='LINEAR', max_length=10)),
                ('depreciation_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('disposal_date', models.DateField(blank=True, null=True)),
                ('disposal_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='accounting.chartofaccounts')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_assets', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polyclinic.department')),
                ('depreciation_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_depreciations', to='accounting.chartofaccounts')),
                ('expense_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depreciation_expenses', to='accounting.chartofaccounts')),
                ('responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Immobilisation',
                'ordering': ['asset_number'],
            },
        ),
        migrations.CreateModel(
            name='AccountingOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_type', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('HOSPITALIZATION', 'Hospitalisation'), ('PRESCRIPTION', 'Prescription'), ('EXAM', 'Examen'), ('SURGERY', 'Chirurgie')], max_length=20)),
                ('operation_id', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polyclinic.bill')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('journal_entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.journalentry')),
            ],
            options={
                'verbose_name': 'Opération comptable',
            },
        ),
        migrations.CreateModel(
            name='TaxDeclaration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('declaration_type', models.CharField(choices=[('VAT_MONTHLY', 'TVA mensuelle'), ('VAT_QUARTERLY', 'TVA trimestrielle'), ('INCOME_TAX', 'Impôt sur les bénéfices'), ('PAYROLL_TAX', 'Charges sociales')], max_length=20)),
                ('period_year', models.PositiveIntegerField()),
                ('period_month', models.PositiveIntegerField(blank=True, null=True)),
                ('period_quarter', models.PositiveIntegerField(blank=True, null=True)),
                ('tax_base', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('penalties', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('due_date', models.DateField()),
                ('submission_date', models.DateField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Brouillon'), ('SUBMITTED', 'Soumise'), ('PAID', 'Payée'), ('LATE', 'En retard')], default='DRAFT', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('journal_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.journalentry')),
            ],
            options={
                'verbose_name': 'Déclaration fiscale',
                'unique_together': {('declaration_type', 'period_year', 'period_month', 'period_quarter')},
            },
        ),
        migrations.CreateModel(
            name='FinancialRatio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_year', models.PositiveIntegerField()),
                ('period_month', models.PositiveIntegerField()),
                ('ratio_type', models.CharField(choices=[('LIQUIDITY', 'Liquidité'), ('PROFITABILITY', 'Rentabilité'), ('EFFICIENCY', 'Efficacité'), ('LEVERAGE', 'Endettement')], max_length=15)),
                ('ratio_name', models.CharField(max_length=100)),
                ('ratio_value', models.DecimalField(decimal_places=4, max_digits=10)),
                ('calculation_date', models.DateTimeField(auto_now_add=True)),
                ('calculated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ratio financier',
                'unique_together': {('period_year', 'period_month', 'ratio_name')},
            },
        ),
        migrations.CreateModel(
            name='BudgetLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('january', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('february', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('march', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('april', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('may', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('june', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('july', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('august', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('september', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('october', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('november', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('december', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('notes', models.TextField(blank=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccounts')),
                ('analytic_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.analyticaccount')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='accounting.budget')),
            ],
            options={
                'verbose_name': 'Ligne budgétaire',
                'unique_together': {('budget', 'account', 'analytic_account')},
            },
        ),
        migrations.CreateModel(
            name='BankReconciliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reconciliation_date', models.DateField()),
                ('statement_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('book_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('outstanding_checks', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('deposits_in_transit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('bank_charges', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('is_reconciled', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.bankaccount')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rapprochement bancaire',
                'unique_together': {('bank_account', 'reconciliation_date')},
            },
        ),
        migrations.CreateModel(
            name='AccountingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('state', models.CharField(choices=[('OPEN', 'Ouvert'), ('CLOSED', 'Clôturé'), ('LOCKED', 'Verrouillé')], default='OPEN', max_length=10)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_periods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Période comptable',
                'ordering': ['-year', '-month'],
                'unique_together': {('year', 'month')},
            },
        ),
    ]
